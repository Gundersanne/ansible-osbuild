---

- name: Enable fastestmirror on Fedora
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: fastestmirror
    value: "1"
  when:
    - ansible_distribution == 'Fedora'

- name: Disable install_weak_deps on Fedora
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: install_weak_deps
    value: "0"
  when:
    - ansible_distribution == 'Fedora'

- name: Ensure all packages are updated
  package:
    name: "*"
    state: latest
  register: package_updates
  until: package_updates is success
  retries: 5

- name: Install required packages
  package:
    name: "{{ required_packages }}"
  register: package_install
  until: package_install is success
  retries: 5

- name: Set global gitconfig parameters
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - name: user.name
      value: "Integration Testing"
    - name: user.email
      value: "nobody@redhat.com"

- name: Ensure cloned repo directories are completely clean
  file:
    path: "/opt/{{ item }}"
    state: absent
  loop:
    - osbuild
    - osbuild-composer

- name: Clone osbuild from GitHub
  git:
    repo: https://github.com/osbuild/osbuild
    dest: /opt/osbuild
    version: "{{ osbuild_branch }}"
    force: yes
    clone: yes
    update: yes
    track_submodules: no
  register: git_composer

- name: Clone osbuild-composer from GitHub
  git:
    repo: https://github.com/osbuild/osbuild-composer
    dest: /opt/osbuild-composer
    version: "{{ osbuild_composer_branch }}"
    force: yes
    clone: yes
    update: yes
    track_submodules: no
  register: git_composer

- name: Install build dependencies
  command: |
    dnf -y builddep \
      /opt/osbuild-composer/golang-github-osbuild-composer.spec \
      /opt/osbuild/osbuild.spec
  args:
    warn: no
  register: composer_builddep
  until: composer_builddep is success
  retries: 5

- name: Build osbuild RPMs
  shell: make rpm
  args:
    chdir: /opt/osbuild
  register: rpm_osbuild

- name: Build osbuild-composer RPMs
  shell: make rpm
  args:
    chdir: /opt/osbuild-composer
  register: rpm_osbuild_composer

- name: Get a list of RPMs built for osbuild
  command: "find /opt/osbuild/rpmbuild/RPMS/ -name '*.rpm'"
  register: osbuild_packages
  when:
    - rpm_osbuild is changed

- name: Get a list of RPMs built for osbuild-composer
  command: "find /opt/osbuild-composer/rpmbuild/RPMS/ -name '*.rpm'"
  register: composer_packages
  when:
    - rpm_osbuild_composer is changed

- name: Gather a list of currently installed packages
  command: rpm -qa
  register: packages_installed

- name: Disable services before removing old packages
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - cockpit.socket
    - osbuild-composer.socket
  when:
    - osbuild in packages_installed.stdout_lines

- name: Remove the currently installed packages
  package:
    name:
      - "golang-github-osbuild*"
      - "osbuild*"
      - "python3-osbuild"
  state: absent
  when:
    - osbuild in packages_installed.stdout_lines

- name: List packages to be installed
  debug:
    msg: "{{ composer_packages.stdout_lines + osbuild_packages.stdout_lines }}"

- name: Install RPMs
  package:
    name: "{{ composer_packages.stdout_lines + osbuild_packages.stdout_lines }}"
    state: latest
  when:
    - rpm_osbuild_composer is changed or rpm_osbuild is changed
